#tree_map_chart{:style => "width:600px; height:400px;"}

-# Todo - move

- data_rows = "data.addRows([  ['All Codes',null,0,0],\r"

- codes = Nsp.all
- roots = Nsp.roots
- codings = CodingBudget.with_code_ids(codes).with_activities(@data_response.activities).all.map_to_hash{ |b| {b.code_id => b} }

- codes.each do |code|
  -# ignore parents of a different type
  - parent = Nsp.roots.include?(code) ? 'All Codes' : code.parent.short_display
  - amount = codings[code.id].nil? ? 0 : codings[code.id].calculated_amount
  - data_rows << "            ['#{code.short_display}', '#{parent}', #{amount}, #{code.level}],\r"

-# strip last comma
- data_rows = data_rows[0..(data_rows.rindex(',')-1)]
- data_rows << "  ]); "

:javascript
  google.load("visualization", "1", {packages:["treemap"]});
  //google.setOnLoadCallback(drawChart);
  function drawChart() {
      // Create and populate the data table.
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'Code');
      data.addColumn('string', 'Parent');
      data.addColumn('number', 'Market trade volume (size)');
      data.addColumn('number', 'Market increase/decrease (color)');
      #{data_rows}

      // Create and draw the visualization.
      var tree = new google.visualization.TreeMap(document.getElementById('tree_map_chart'));
      tree.draw(data, {
        minColor: '#99ccff',
        midColor: '#6699cc',
        maxColor: '#336699',
        headerHeight: 15,
        fontColor: 'black',
        showScale: false});
  }
