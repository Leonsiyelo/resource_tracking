#projects
  .simple_table
    %table
      %thead
        %tr
          %th Project
          %th Activities
          %th Spend
          %th Budget
          %th.manage Manage
      %tbody
        - projects.each do |project|
          %tr.project.entry_header
            %td
              %ul
                %li.name= project.name
                %li.descr= project.description.to_s
                %li.funders
                  = "Funders: "
                  - FundingFlow.sources_for(project).find(:all, :include => :from).each do |source|
                    = "#{source.from.try(:name)} (#{source.budget}),"
            %td= project.activities.count
            %td= n2c(project.spend, project.currency || project.data_response.currency)
            %td= n2c(project.budget, project.currency || project.data_response.currency)
            %td.manage
              = link_to "Edit", edit_project_path(project)
              = link_to "Delete", project, :method => :delete, :confirm => "Are your sure?"

          %tr.project.entry_main.s_border
            %td{:colspan => 100}
              = render 'shared/data_responses/project_summary', :project => project

              .project_sub_tabs.tabs_nav
                %ul.inline_alt_tab
                  %li{:class => 'selected' }= link_to "Comments (#{project.comments.size})", "#", :class => "comment_details"
                  %li= link_to "Activities (#{project.activities.roots.count})", "#", :class => "activity_details"
                  %li= link_to "Other Costs (#{project.activities.with_type('OtherCost').count})", "#", :class => "activity_details"

              .tabs
                .tab1
                  = render 'shared/data_responses/comments', :commentable => project
                .tab2
                  = render 'shared/data_responses/activities', :activities => project.activities.roots.greatest_first.find(:all, :include => {:sub_activities => :provider})
                .tab3
                  = render 'shared/data_responses/activities', :activities => project.activities.with_type("OtherCost"), :other_costs => true
